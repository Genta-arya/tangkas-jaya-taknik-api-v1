generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id           Int           @id @default(autoincrement())
  uid          String
  username     String
  orderDetails OrderDetails?
  location     Location?
  images       Image[]
}

model OrderDetails {
  id         Int      @id @default(autoincrement())
  uuid       String?
  username   String?
  name       String
  nm_product String
  qty        Int
  price      Int
  status     String
  url        String?
  telp       String?
  ket        String?
  desc       String?
  orderId    Int      @unique
  createdAt  DateTime @default(now())
  order      Order    @relation(fields: [orderId], references: [id])
  images     Image[]
}

model Location {
  id        Int    @id @default(autoincrement())
  address   String
  latitude  Float
  longitude Float
  orderId   Int    @unique
  order     Order  @relation(fields: [orderId], references: [id])
}

model Image {
  id             Int           @id @default(autoincrement())
  imageUrl       String
  path           String?
  orderId        Int
  order          Order         @relation(fields: [orderId], references: [id])
  orderDetailsId Int?
  orderDetails   OrderDetails? @relation(fields: [orderDetailsId], references: [id])
}

model Auth {
  uid       Int        @id @default(autoincrement())
  username  String     @unique @db.VarChar(255)
  email     String     @unique @db.VarChar(255)
  password  String     @db.VarChar(255)
  role      String?    @db.VarChar(255)
  token_jwt String?    @db.VarChar(255)
  otp       String?
  comments  Comment[]
  discounts Discount[]

  @@unique([uid])
}

model Discount {
  id     Int      @id @default(autoincrement())
  code   String
  exp    DateTime
  username String
  status String
  disc   Float
  authId Int
  auth   Auth     @relation(fields: [authId], references: [uid])
}

model Comment {
  id        Int      @id @default(autoincrement())
  uid       Int
  review    String
  rating    Int
  user      Auth     @relation(fields: [uid], references: [uid])
  createdAt DateTime @default(now())

  @@index([uid], name: "user_id")
}

model Category {
  id          Int       @id @default(autoincrement())
  nm_category String
  products    Product[]
}

model Product {
  id         Int      @id @default(autoincrement())
  nm_product String
  desc       String
  price      Int
  thumbnail  String?
  url        String?
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
}
